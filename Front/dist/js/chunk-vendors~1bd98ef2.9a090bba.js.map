{"version":3,"sources":["webpack:///./node_modules/date-fns/minutesToMilliseconds/index.js","webpack:///./node_modules/date-fns/nextDay/index.js","webpack:///./node_modules/date-fns/nextMonday/index.js","webpack:///./node_modules/date-fns/nextFriday/index.js","webpack:///./node_modules/date-fns/nextThursday/index.js","webpack:///./node_modules/date-fns/monthsToQuarters/index.js","webpack:///./node_modules/date-fns/nextWednesday/index.js","webpack:///./node_modules/date-fns/nextSaturday/index.js","webpack:///./node_modules/date-fns/monthsToYears/index.js","webpack:///./node_modules/date-fns/minutesToSeconds/index.js","webpack:///./node_modules/date-fns/nextSunday/index.js","webpack:///./node_modules/date-fns/nextTuesday/index.js","webpack:///./node_modules/date-fns/minutesToHours/index.js"],"names":["Object","defineProperty","exports","value","default","minutesToMilliseconds","_index","_interopRequireDefault","_index2","obj","__esModule","minutes","arguments","Math","floor","millisecondsInMinute","module","nextDay","_index3","date","day","delta","nextMonday","nextFriday","nextThursday","monthsToQuarters","months","quarters","monthsInQuarter","nextWednesday","nextSaturday","monthsToYears","years","monthsInYear","minutesToSeconds","secondsInMinute","nextSunday","nextTuesday","minutesToHours","hours","minutesInHour"],"mappings":"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","file":"js/chunk-vendors~1bd98ef2.9a090bba.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = minutesToMilliseconds;\n\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index2 = require(\"../constants/index.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name minutesToMilliseconds\n * @category Conversion Helpers\n * @summary Convert minutes to milliseconds.\n *\n * @description\n * Convert a number of minutes to a full number of milliseconds.\n *\n * @param {number} minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 minutes to milliseconds\n * const result = minutesToMilliseconds(2)\n * //=> 120000\n */\nfunction minutesToMilliseconds(minutes) {\n  (0, _index.default)(1, arguments);\n  return Math.floor(minutes * _index2.millisecondsInMinute);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nextDay;\n\nvar _index = _interopRequireDefault(require(\"../addDays/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../getDay/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name nextDay\n * @category Weekday Helpers\n * @summary When is the next day of the week?\n *\n * @description\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {Day} day - day of the week\n * @returns {Date} - the date is the next day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the next Monday after Mar, 20, 2020?\n * const result = nextDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 23 2020 00:00:00\n *\n * @example\n * // When is the next Tuesday after Mar, 21, 2020?\n * const result = nextDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 24 2020 00:00:00\n */\nfunction nextDay(date, day) {\n  (0, _index3.default)(2, arguments);\n  var delta = day - (0, _index2.default)(date);\n  if (delta <= 0) delta += 7;\n  return (0, _index.default)(date, delta);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nextMonday;\n\nvar _index = _interopRequireDefault(require(\"../nextDay/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name nextMonday\n * @category Weekday Helpers\n * @summary When is the next Monday?\n *\n * @description\n * When is the next Monday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Monday after Mar, 22, 2020?\n * const result = nextMonday(new Date(2020, 2, 22))\n * //=> Mon Mar 23 2020 00:00:00\n */\nfunction nextMonday(date) {\n  (0, _index2.default)(1, arguments);\n  return (0, _index.default)(date, 1);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nextFriday;\n\nvar _index = _interopRequireDefault(require(\"../nextDay/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name nextFriday\n * @category Weekday Helpers\n * @summary When is the next Friday?\n *\n * @description\n * When is the next Friday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Friday after Mar, 22, 2020?\n * const result = nextFriday(new Date(2020, 2, 22))\n * //=> Fri Mar 27 2020 00:00:00\n */\nfunction nextFriday(date) {\n  (0, _index2.default)(1, arguments);\n  return (0, _index.default)(date, 5);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nextThursday;\n\nvar _index = _interopRequireDefault(require(\"../nextDay/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name nextThursday\n * @category Weekday Helpers\n * @summary When is the next Thursday?\n *\n * @description\n * When is the next Thursday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Thursday after Mar, 22, 2020?\n * const result = nextThursday(new Date(2020, 2, 22))\n * //=> Thur Mar 26 2020 00:00:00\n */\nfunction nextThursday(date) {\n  (0, _index2.default)(1, arguments);\n  return (0, _index.default)(date, 4);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = monthsToQuarters;\n\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index2 = require(\"../constants/index.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name monthsToQuarters\n * @category Conversion Helpers\n * @summary Convert number of months to quarters.\n *\n * @description\n * Convert a number of months to a full number of quarters.\n *\n * @param {number} months - number of months to be converted.\n *\n * @returns {number} the number of months converted in quarters\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 6 months to quarters:\n * const result = monthsToQuarters(6)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = monthsToQuarters(7)\n * //=> 2\n */\nfunction monthsToQuarters(months) {\n  (0, _index.default)(1, arguments);\n  var quarters = months / _index2.monthsInQuarter;\n  return Math.floor(quarters);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nextWednesday;\n\nvar _index = _interopRequireDefault(require(\"../nextDay/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name nextWednesday\n * @category Weekday Helpers\n * @summary When is the next Wednesday?\n *\n * @description\n * When is the next Wednesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Wednesday after Mar, 22, 2020?\n * const result = nextWednesday(new Date(2020, 2, 22))\n * //=> Wed Mar 25 2020 00:00:00\n */\nfunction nextWednesday(date) {\n  (0, _index2.default)(1, arguments);\n  return (0, _index.default)(date, 3);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nextSaturday;\n\nvar _index = _interopRequireDefault(require(\"../nextDay/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name nextSaturday\n * @category Weekday Helpers\n * @summary When is the next Saturday?\n *\n * @description\n * When is the next Saturday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Saturday after Mar, 22, 2020?\n * const result = nextSaturday(new Date(2020, 2, 22))\n * //=> Sat Mar 28 2020 00:00:00\n */\nfunction nextSaturday(date) {\n  (0, _index2.default)(1, arguments);\n  return (0, _index.default)(date, 6);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = monthsToYears;\n\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index2 = require(\"../constants/index.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name monthsToYears\n * @category Conversion Helpers\n * @summary Convert number of months to years.\n *\n * @description\n * Convert a number of months to a full number of years.\n *\n * @param {number} months - number of months to be converted\n *\n * @returns {number} the number of months converted in years\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 36 months to years:\n * const result = monthsToYears(36)\n * //=> 3\n *\n * // It uses floor rounding:\n * const result = monthsToYears(40)\n * //=> 3\n */\nfunction monthsToYears(months) {\n  (0, _index.default)(1, arguments);\n  var years = months / _index2.monthsInYear;\n  return Math.floor(years);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = minutesToSeconds;\n\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index2 = require(\"../constants/index.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name minutesToSeconds\n * @category Conversion Helpers\n * @summary Convert minutes to seconds.\n *\n * @description\n * Convert a number of minutes to a full number of seconds.\n *\n * @param { number } minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 2 minutes to seconds\n * const result = minutesToSeconds(2)\n * //=> 120\n */\nfunction minutesToSeconds(minutes) {\n  (0, _index.default)(1, arguments);\n  return Math.floor(minutes * _index2.secondsInMinute);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nextSunday;\n\nvar _index = _interopRequireDefault(require(\"../nextDay/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name nextSunday\n * @category Weekday Helpers\n * @summary When is the next Sunday?\n *\n * @description\n * When is the next Sunday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Sunday after Mar, 22, 2020?\n * const result = nextSunday(new Date(2020, 2, 22))\n * //=> Sun Mar 29 2020 00:00:00\n */\nfunction nextSunday(date) {\n  (0, _index2.default)(1, arguments);\n  return (0, _index.default)(date, 0);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = nextTuesday;\n\nvar _index = _interopRequireDefault(require(\"../nextDay/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name nextTuesday\n * @category Weekday Helpers\n * @summary When is the next Tuesday?\n *\n * @description\n * When is the next Tuesday?\n *\n * @param {Date | number} date - the date to start counting from\n * @returns {Date} the next Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // When is the next Tuesday after Mar, 22, 2020?\n * const result = nextTuesday(new Date(2020, 2, 22))\n * //=> Tue Mar 24 2020 00:00:00\n */\nfunction nextTuesday(date) {\n  (0, _index2.default)(1, arguments);\n  return (0, _index.default)(date, 2);\n}\n\nmodule.exports = exports.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = minutesToHours;\n\nvar _index = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index2 = require(\"../constants/index.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name minutesToHours\n * @category Conversion Helpers\n * @summary Convert minutes to hours.\n *\n * @description\n * Convert a number of minutes to a full number of hours.\n *\n * @param {number} minutes - number of minutes to be converted\n *\n * @returns {number} the number of minutes converted in hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Convert 140 minutes to hours:\n * const result = minutesToHours(120)\n * //=> 2\n *\n * @example\n * // It uses floor rounding:\n * const result = minutesToHours(179)\n * //=> 2\n */\nfunction minutesToHours(minutes) {\n  (0, _index.default)(1, arguments);\n  var hours = minutes / _index2.minutesInHour;\n  return Math.floor(hours);\n}\n\nmodule.exports = exports.default;"],"sourceRoot":""}